server:
  port: 9000
  error:
    include-stacktrace: always

#logging:
#  level:
#    root: INFO
#    org.springframework.web: INFO
#    org.springframework.security: INFO
#    org.springframework.security.oauth2: INFO
#    org.springframework.cloud.gateway: TRACE
##    org.springframework.boot.autoconfigure: DEBUG

kc:
  base-url: http://keycloak:8080/auth
  realm: master
  realm-url: ${kc.base-url}/realms/${kc.realm}

spring:
  spring:
    thymeleaf:
      cache: false
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${kc.realm-url}/protocol/openid-connect/certs
      client:
        registration:
          master:
            provider: keycloak
            client-id: login-client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope: openid,profile,email,resource.read
        provider:
          keycloak:
            authorization-uri: ${kc.realm-url}/protocol/openid-connect/auth
            token-uri: ${kc.realm-url}/protocol/openid-connect/token
            user-info-uri: ${kc.realm-url}/protocol/openid-connect/userinfo
            user-name-attribute: preferred_username
            jwk-set-uri: ${kc.realm-url}/protocol/openid-connect/certs
  application:
    name: ion-gateway
  cloud:
    gateway:
      routes:
        - id: example
          uri: http://example:8080
          predicates:
            - Path=/example/**
          filters:
            - TokenRelay= # passes along JWT to internal services

web:
  context:
    policy:
      - pattern: "/whoami"
        scope: "openid"
      - pattern: "/ingest"
        scope: "ion/ingest"
      - pattern: "/search"
        scope: "ion/search"
      - pattern: "/transform"
        scope: "ion/transform"
      - pattern: "/store"
        scope: "ion/store"

