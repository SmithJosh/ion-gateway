server:
  port: 8443
  ssl:
    enabled: true
    key-store: file:/certs/gateway.jks
    key-store-password: changeit
    key-alias: gateway
    key-store-type: JKS
    key-store-provider: SUN
    trust-store: file:/trust/demoTruststore.jks
    trust-store-password: changeit
    trust-store-type: JKS
  error:
    include-stacktrace: always

kc:
  base-uri: http://keycloak:8080/auth
  realm: master
  issuer-uri: ${kc.base-uri}/realms/${kc.realm}

spring:
  application:
    name: ion-gateway
  spring:
    thymeleaf:
      cache: false
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${kc.issuer-uri}/protocol/openid-connect/certs
      client:
        registration:
          keycloak:
            provider: keycloak
            clientId: login-client
            clientSecret: secret
            authorizationGrantType: authorization_code
            redirectUri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope: openid
        provider:
          keycloak:
            authorization-uri: ${kc.issuer-uri}/protocol/openid-connect/auth
            jwk-set-uri: ${kc.issuer-uri}/protocol/openid-connect/certs
            token-uri: ${kc.issuer-uri}/protocol/openid-connect/token
            user-info-uri: ${kc.issuer-uri}/protocol/openid-connect/userinfo
            user-name-attribute: preferred_username
  cloud:
    gateway:
      routes:
        - id: minio
          uri: http://minio:9000
          predicates:
            - Path=/minio/**
          # do not relay token to minio, it doesnt use keycloak
        - id: keycloak
          uri: http://keycloak:8080
          predicates:
            - Path=/keycloak/**
          filters:
            - TokenRelay=
        - id: store
          uri: http://store:8080
          predicates:
            - Path=/store/**
          filters:
            - TokenRelay=
        - id: ingest
          uri: http://ingest:8080
          predicates:
            - Path=/ingest/**
          filters:
            - TokenRelay=